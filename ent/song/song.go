// Code generated by entc, DO NOT EDIT.

package song

import (
	"enttest/ent/schema"
	"fmt"
)

const (
	// Label holds the string label denoting the song type in the database.
	Label = "song"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name vertex property in the database.
	FieldName = "name"
	// FieldPhone holds the string denoting the phone vertex property in the database.
	FieldPhone = "phone"
	// FieldPlays holds the string denoting the plays vertex property in the database.
	FieldPlays = "plays"
	// FieldGender holds the string denoting the gender vertex property in the database.
	FieldGender = "gender"

	// Table holds the table name of the song in the database.
	Table = "songs"
)

// Columns holds all SQL columns for song fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldPhone,
	FieldPlays,
	FieldGender,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Song type.
var ForeignKeys = []string{
	"artist_songs",
}

var (
	fields = schema.Song{}.Fields()

	// descName is the schema descriptor for name field.
	descName = fields[0].Descriptor()
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator = descName.Validators[0].(func(int) error)

	// descPlays is the schema descriptor for plays field.
	descPlays = fields[2].Descriptor()
	// PlaysValidator is a validator for the "plays" field. It is called by the builders before save.
	PlaysValidator = descPlays.Validators[0].(func(int64) error)
)

// Gender defines the type for the gender enum field.
type Gender string

// Gender values.
const (
	GenderF Gender = "f"
	GenderM Gender = "m"
)

func (s Gender) String() string {
	return string(s)
}

// GenderValidator is a validator for the "ge" field enum values. It is called by the builders before save.
func GenderValidator(ge Gender) error {
	switch ge {
	case GenderF, GenderM:
		return nil
	default:
		return fmt.Errorf("song: invalid enum value for gender field: %q", ge)
	}
}

// Code generated by entc, DO NOT EDIT.

package artist

import (
	"enttest/ent/schema"
	"fmt"
)

const (
	// Label holds the string label denoting the artist type in the database.
	Label = "artist"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldSlug holds the string denoting the slug vertex property in the database.
	FieldSlug = "slug"
	// FieldAge holds the string denoting the age vertex property in the database.
	FieldAge = "age"
	// FieldPhone holds the string denoting the phone vertex property in the database.
	FieldPhone = "phone"
	// FieldPlays holds the string denoting the plays vertex property in the database.
	FieldPlays = "plays"
	// FieldGender holds the string denoting the gender vertex property in the database.
	FieldGender = "gender"

	// Table holds the table name of the artist in the database.
	Table = "Artistas"
	// SongsTable is the table the holds the songs relation/edge.
	SongsTable = "songs"
	// SongsInverseTable is the table name for the Song entity.
	// It exists in this package in order to avoid circular dependency with the "song" package.
	SongsInverseTable = "songs"
	// SongsColumn is the table column denoting the songs relation/edge.
	SongsColumn = "artist_songs"
)

// Columns holds all SQL columns for artist fields.
var Columns = []string{
	FieldID,
	FieldSlug,
	FieldAge,
	FieldPhone,
	FieldPlays,
	FieldGender,
}

var (
	fields = schema.Artist{}.Fields()

	// descAge is the schema descriptor for age field.
	descAge = fields[1].Descriptor()
	// AgeValidator is a validator for the "age" field. It is called by the builders before save.
	AgeValidator = descAge.Validators[0].(func(int) error)

	// descPlays is the schema descriptor for plays field.
	descPlays = fields[3].Descriptor()
	// PlaysValidator is a validator for the "plays" field. It is called by the builders before save.
	PlaysValidator = descPlays.Validators[0].(func(int64) error)
)

// Gender defines the type for the gender enum field.
type Gender string

// Gender values.
const (
	GenderF Gender = "f"
	GenderM Gender = "m"
)

func (s Gender) String() string {
	return string(s)
}

// GenderValidator is a validator for the "ge" field enum values. It is called by the builders before save.
func GenderValidator(ge Gender) error {
	switch ge {
	case GenderF, GenderM:
		return nil
	default:
		return fmt.Errorf("artist: invalid enum value for gender field: %q", ge)
	}
}
